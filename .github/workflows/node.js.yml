name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci  # Install dependencies
    - run: npm run build --if-present  # Build the app

    - name: Verify dist folder exists
      run: |
        echo "Listing contents of the build directory:"
        ls -la ./dist

    - name: Setup SSH for EC2 Deployment
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts

    - name: Ensure /var/www/html/ has correct permissions
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo chown -R ubuntu:ubuntu /var/www/html/'
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo chmod -R 775 /var/www/html/'

    - name: Rsync build files with sudo
      run: |
        # Print the current working directory and list files
        echo "Current directory:"
        pwd
        echo "Listing contents of the build directory:"
        ls -la ./dist
        # Rsync to EC2 instance
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo rsync -avz --delete ./dist/ /var/www/html/'

    - name: Set proper permissions for Nginx
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo chown -R www-data:www-data /var/www/html/'
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo chmod -R 755 /var/www/html/'

    - name: Restart Nginx on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo systemctl restart nginx'
