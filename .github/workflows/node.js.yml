name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci  # Install dependencies
    - run: npm run build --if-present  # Build the app

    # Check if the build directory exists
    - run: ls -la ./dist

    - name: Setup SSH for EC2 Deployment
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts

    - name: Verify SSH Connection
      run: |
        # Verify if SSH works with the instance first
        echo "Checking SSH connection..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} "echo SSH connection successful"

    - name: Clear contents of /var/www/html
      run: |
        # Use SSH to run commands remotely on EC2
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo rm -rf /var/www/html/*'

    - name: Copy dist folder to /var/www/html
      run: |
        # Ensure the build directory is there
        ls -la ./dist  # Double-check for the build directory
        
        # Rsync build files to EC2 instance
        rsync -avz --delete ./dist/ ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/var/www/html/

    - name: Restart Nginx on EC2
      run: |
        # Optionally restart the Nginx service on EC2
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo systemctl restart nginx'
